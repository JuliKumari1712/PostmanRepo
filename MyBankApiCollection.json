{
	"info": {
		"_postman_id": "2e51d095-7f4d-44cc-ad45-729c3e6b269b",
		"name": "MyBankApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "UserApiTest",
			"item": [
				{
					"name": "Credentials_notPresent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema= {\r",
									" \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 403 forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/user/index.php/\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllUsers_credentialsPresent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful Get request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202,200]);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/user/index.php/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_ParticularUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"firstname\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"email\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"acNo\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"gender\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"dob\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"country\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"firstname\",\r",
									"    \"email\",\r",
									"    \"acNo\",\r",
									"    \"gender\",\r",
									"    \"dob\",\r",
									"    \"country\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test.skip(\"Skip Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/user/index.php?id={{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Correlation_to_Get_ParticularUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test.skip(\"Skip Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/user/index.php?id={{resbody_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "{{resbody_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Non_Existing_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/user/index.php?id={{Non-existingid}}\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "{{Non-existingid}}\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post_NewUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"Message\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Status\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"Message\",\r",
									"    \"Status\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 201 created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"ashish\",\r\n    \"lastname\": \"Kore\",\r\n    \"email\": \"ash1@gmail.com\",\r\n    \"accno\": 32432304232,\r\n    \"password\": \"1234\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1982-06-23\",\r\n    \"country\": \"india\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php/\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post_ExistingEmail_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 bad request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400,401]);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Existing email id test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Email id Already Exist\");\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400,401]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Shubhangi\",\r\n    \"lastname\": \"Kore\",\r\n    \"email\": \"kore@gmail.com\",\r\n    \"accno\": 32432304232,\r\n    \"password\": \"1234\",\r\n    \"gender\": \"Female\",\r\n    \"dob\": \"1982-06-23\",\r\n    \"country\": \"india\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php/\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post_InvalidEmail_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"Message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"Message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"pm.test.skip(\"Skip Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Shubhangi\",\r\n    \"lastname\": \"Kore\",\r\n    \"email\": \"koregmail.com\",\r\n    \"accno\": 32432304232,\r\n    \"password\": \"1234\",\r\n    \"gender\": \"Female\",\r\n    \"dob\": \"1982-06-23\",\r\n    \"country\": \"india\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php/\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post_MissingData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"Message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"Message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400,401]);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Shubhangi\",\r\n    \"lastname\": \"Kore\",\r\n    \"email\": \"koregmail.com\",\r\n    \"accno\": 32432304232,\r\n    \"password\": \"1234\",\r\n    \"gender\": \"\",\r\n    \"dob\": \"1982-06-23\",\r\n    \"country\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php/\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put_ParticularEmailId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 200]);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \r\n   \"email\": \"Kore@gmail.com\",\r\n    \"newPass\": \"pass123\",\r\n    \"rePass\": \"pass123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php/\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put_NonExistingEmailId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful Put request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([401,400]);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \r\n   \"email\": \"K@gmail.com\",\r\n    \"newPass\": \"pass123\",\r\n    \"rePass\": \"pass123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php/\n",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put_UnmatchRepass",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \r\n   \"email\": \"Kore@gmail.com\",\r\n    \"newPass\": \"pass123\",\r\n    \"rePass\": \"pass12\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/mybank/api/user/index.php/\n",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"mybank",
								"api",
								"user",
								"index.php",
								"\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Particular_User_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"Message \": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"Message \",\r",
									"    \"status\"\r",
									"  ]\r",
									"}\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful Put request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([500,503,501]);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php?id=61",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "61"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_NonExisting_id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/user/index.php?id=100",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"user",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "100"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BenificiaryApiTest",
			"item": [
				{
					"name": "Fetch_all_Beneficiary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Schema Generated using ONLINE Schema generator\r",
									"var schema ={    \r",
									"    \"type\": \"array\",\r",
									"    \"items\": [\r",
									"        {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"benacno\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"remacno\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"acname\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"bankname\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"branchname\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"ifsc\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"benacno\",\r",
									"                \"remacno\",\r",
									"                \"acname\",\r",
									"                \"bankname\",\r",
									"                \"branchname\",\r",
									"                \"ifsc\"\r",
									"            ]\r",
									"        },\r",
									"        {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"benacno\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"remacno\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"acname\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"bankname\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"branchname\": {\r",
									"                    \"type\": \"string\"\r",
									"                },\r",
									"                \"ifsc\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"benacno\",\r",
									"                \"remacno\",\r",
									"                \"acname\",\r",
									"                \"bankname\",\r",
									"                \"branchname\",\r",
									"                \"ifsc\"\r",
									"            ]\r",
									"        }\r",
									"    ]\r",
									"};\r",
									"//Schema Validation \r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"        pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch_Single_beneficiary_using_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test.skip(\"Skip Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"let id = pm.variables.get(\"id\");\r",
									"\r",
									"pm.test(\"Test To confirm id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php?id={{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch_Beneficiary_with_Invalid_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"No Beneficiary Found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php?id={{invalidID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "{{invalidID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Beneficiary_With_Incomplete_data",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "add_new_beneficiary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Beneficiary Added Successfully!\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"acno\": 908765432112,\r\n    \"benname\": \"Juli Roy\",\r\n    \"benacno\": 123490009012,\r\n    \"branchname\": \"Bihar\",\r\n    \"bankname\": \"ICICI\",\r\n    \"ifsc\": \"123icici\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_beneficiary_with_randomAccNumber",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomAccNum = Math.floor(Math.random() * 899999 + 100000000000);\r",
									"pm.environment.set(\"accNumber\",randomAccNum);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Beneficiary Added Successfully!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"acno\": 908765432112,\r\n    \"benname\": \"Rani Roy\",\r\n    \"benacno\": {{accNumber}},\r\n    \"branchname\": \"Bihar\",\r\n    \"bankname\": \"ICICI\",\r\n    \"ifsc\": \"123icici\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Duplicate_Beneficiary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Beneficiary with this Account Number Already Exist\");\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test.skip(\"Skip Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"acno\": 908765432112,\r\n    \"benname\": \"Juli Roy\",\r\n    \"benacno\": 123490009012,\r\n    \"branchname\": \"Bihar\",\r\n    \"bankname\": \"ICICI\",\r\n    \"ifsc\": \"123icici\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_beneficiary",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"acno\": 908765432112,\r\n    \"benname\": \"Juli Roy\",\r\n    \"benacno\": 123490009012,\r\n    \"branchname\": \"Goa\",\r\n    \"bankname\": \"ICICI\",\r\n    \"ifsc\": \"123icici\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update_beneficiary_with_null_parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Unable To Add New Beneficiary.. Invalid data \\\\/ Missing Parameters\");\r",
									"});\r",
									"pm.test(\"Status code is 400 Bad request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"acno\": 908765432112,\r\n    \"benname\": \"Juli Roy\",\r\n    \"benacno\": \"\",\r\n    \"branchname\": \"Goa\",\r\n    \"bankname\": \"ICICI\",\r\n    \"ifsc\": \"123icici\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_beneficiary_with_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string for message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Beneficiary Details Deleted\");\r",
									"});\r",
									"pm.test(\"Body matches string for status check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"pm.test(\"Status code is 200 \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test.skip(\"Skip Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php?id={{id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_beneficiary_with_invalid_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string for message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Id doesn't Exits or Beneficiary Details Already Deleted\");\r",
									"});\r",
									"pm.test(\"Body matches string for status\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"False\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 503 Service Unavailable \", function () {\r",
									"    pm.response.to.have.status(503);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php?id=6789",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": "6789"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_beneficiary_with_null_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ID is Required\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200 \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/beneficiary/index.php?id=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"beneficiary",
								"index.php"
							],
							"query": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Loan Application",
			"item": [
				{
					"name": "create_single_loan_Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Application Submitted Successfully!\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201 user created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomVal = Math.random().toString(36).substring(1);\r",
									"var emailId = \"name\"+randomVal+\"@gmail.com\";\r",
									"pm.environment.set(\"emailId\",emailId);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"sona kumari\",\r\n    \"age\": 44,\r\n    \"email\": \"{{emailId}}\",\r\n    \"credScore\": 665\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/index.php/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								"index.php",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "already_exist_application_with same email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Application Request with this Email id Already Exist\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test.skip(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"name\": \"Ashish Sawant\",\r\n            \"age\": 50,\r\n            \"email\": \"ashish@gmail.com\",\r\n            \"credScore\": 650\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "with_invalid_credential_email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Email ID\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"name\": \"Ashish Sawant\",\r\n            \"age\": 25,\r\n            \"email\": \"ashishgmail.com\",\r\n            \"credScore\": 650\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/index.php/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								"index.php",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "with_invalid_credential_missing parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Unable to create new Application. Invalid data \\\\/ Missing Parameters\")\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"name\": \"\",\r\n            \"age\": 25,\r\n            \"email\": \"ashish@gmail.com\",\r\n            \"credScore\": 650\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/index.php/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								"index.php",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update_credit_score",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Credit Score Updated successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200 \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n            \"email\": \"yashshende@gmail.com\",\r\n            \"newCredSocre\": 990\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update_with_null_creditScore",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Unable to Update Application. Invalid data \\\\/ Missing Parameters\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test.skip(\"Checking Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n            \"email\": \"ashish@gmail.com\",\r\n            \"newCredSocre\":\"\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update_with_invalid_creditScore",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Application Request with this Email id Doesn't Exist\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n            \"email\": \"ashish@gmail.com\",\r\n            \"newCredSocre\":2000\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/index.php/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								"index.php",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_existing_application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string for message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Application Request Deleted\");\r",
									"});\r",
									"pm.test(\"Body matches string for status check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200 \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/?id={{valid_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{valid_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_data_with_Non_Exist_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string for message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Id doesn't Exits or Apllication Request Already Deleted\");\r",
									"});\r",
									"pm.test(\"Body matches string for status check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"False\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 503 Service Unavailable\", function () {\r",
									"    pm.response.to.have.status(503);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/?id={{invalid_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{invalid_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_with_empty_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string for message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ID is Required\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test.skip(\"Checking Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/?id={{ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "fetch_all_loan_application_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = \r",
									"{\r",
									"  \r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"age\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"email\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"cred_score\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"name\",\r",
									"        \"age\",\r",
									"        \"email\",\r",
									"        \"cred_score\"\r",
									"      ]\r",
									"    },\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"age\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"email\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"cred_score\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"name\",\r",
									"        \"age\",\r",
									"        \"email\",\r",
									"        \"cred_score\"\r",
									"      ]\r",
									"    },\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"age\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"email\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"cred_score\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"name\",\r",
									"        \"age\",\r",
									"        \"email\",\r",
									"        \"cred_score\"\r",
									"      ]\r",
									"    },\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"age\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"email\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"cred_score\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"name\",\r",
									"        \"age\",\r",
									"        \"email\",\r",
									"        \"cred_score\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"// Schema validation\r",
									"let res = pm.response.json();\r",
									"pm.test('Schema is valid', () => {\r",
									"    pm.expect(res).to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"// status code validation\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// response time\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"// validate of presence of header-content type\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"// Checking response in console\r",
									"console.log(res);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/?id=",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							],
							"query": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "fetch_single_loan_application_id=1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate that value for key \"id\" is 4\r",
									"pm.test(\"Check for id=1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql('1');\r",
									"});\r",
									"\r",
									"// status code validation\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// response time\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"// validate of presence of header-content type\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"// correlation property\r",
									"var jsonData =JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"res_id\",jsonData.id);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/?id=1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "correlation_to_fetch_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/?id={{res_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{res_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "fetch_invalid_loan_application_id=10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"No Application Found\");\r",
									"});\r",
									"// status code validation\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// response time\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"// validate of presence of header-content type\r",
									"pm.test.skip(\"Skip Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/loan/?id={{invalid_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"loan",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{invalid_id}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "admin123",
						"type": "string"
					},
					{
						"key": "username",
						"value": "admin@gmail.com",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "admin123",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin@gmail.com",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost/mybank"
		},
		{
			"key": "id",
			"value": "62"
		},
		{
			"key": "Non-existingid",
			"value": "65"
		},
		{
			"key": "Del_NenExisting",
			"value": ""
		},
		{
			"key": "invalid_id",
			"value": "879"
		},
		{
			"key": "Id",
			"value": "1"
		}
	]
}